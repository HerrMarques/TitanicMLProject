dashboardHeader(title = "Mellyssa"),
dashboardSidebar(),
dashboardBody(
box(plotOutput("CorrelationPlot"), with= 8)
))
server <- function(input, output){
output$CorrelationPlot <- renderPlot({
plot(iris$Sepal.Length,iris$Petal.Length)
})
}
shinyApp(ai, server)
ai <- dashboardPage(
dashboardHeader(title = "Mellyssa"),
dashboardSidebar(),
dashboardBody(
box(plotOutput("CorrelationPlot"), with= 8)
))
server <- function(input, output){
output$CorrelationPlot <- renderPlot({
plot(iris$Sepal.Length,iris$Petal.Length)
})
}
shinyApp(ai, server)
head(iris)
runApp('Programmieren/R')
server <- function(input, output){
output$CorrelationPlot <- renderPlot({
plot(iris$Sepal.Length,iris$Petal.Length,
iris[[input$features]],
xlab= "Sepal lenght", ylab= "Feature")
})
}
shinyApp(ai, server)
ai <- dashboardPage(
dashboardHeader(title = "Mellyssa"),
dashboardSidebar(),
dashboardBody(
box(plotOutput("CorrelationPlot"), with= 8),
box(
selectInput("features", "Features:",
c("Sepal.Width", "Petal.Length",
"Petal.Width")), with= 4
)
))
server <- function(input, output){
output$CorrelationPlot <- renderPlot({
plot(iris$Sepal.Length,iris$Petal.Length,
iris[[input$features]],
xlab= "Sepal lenght", ylab= "Feature")
})
}
shinyApp(ai, server)
plot(iris$Sepal.Length,iris$Petal.Length,
iris[[input$features]],
xlab= "Sepal lenght", ylab= "Feature")
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
install.packages("plotlly")
install.packages("plotly")
library(DT)
head(mtcars)
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
runApp('Programmieren/R')
ai <- dashboardPage( skin = "blue",
dashboardHeader(title = "Mellyssa"),
dashboardSidebar(
sidebarMenu(
menuItem("Iris", tabName = "iris", icon = icon("tree")),
menuItem("Cars", tabName = "cars", icon = icon("car"))
)
),
dashboardBody(
tabItems(
tabItem("iris",
box(plotOutput("CorrelationPlot"), with= 8),
box(
selectInput("features", "Features:",
c("Sepal.Width", "Petal.Length",
"Petal.Width")), with= 4
)),
tabItem("cars",
fluidPage(h1("Cars"),
dataTableOutput("carstable"))
)
)))
runApp('Programmieren/R')
runApp('Programmieren/R')
knitr::opts_chunk$set(echo = TRUE)
plot1
library(tidyverse)
library(lubridate)
library(wordcloud2)
library(abjutils)
library(shiny)
library(tmap)
library(sf)
library(tmaptools)
setwd("/Users/alexmarques/Programmieren/R/Imigranten/")
tab <- read.csv("bancocrai2014a2019---sistematizacao-geoinfo-atualizada.csv", sep = ";", encoding = "UTF-8")
##Landesnamen zu korrigieren
tab$pais_origem <- str_replace(tab$pais_origem, "Afeganist�o", "Afeganistao")
tab$pais_origem <- str_replace(tab$pais_origem, "�frica do Sul", "Africa do Sul")
tab$pais_origem <- str_replace(tab$pais_origem, "Arg�lia", "Argelia")
tab$pais_origem <- str_replace(tab$pais_origem, "Ar�bia Saudita", "Arabia Saudita")
tab$pais_origem <- str_replace(tab$pais_origem, "Bol�via", "Bolivia")
tab$pais_origem <- str_replace(tab$pais_origem, "Bolivia ", "Bolivia")
tab$pais_origem <- str_replace(tab$pais_origem, "Arm�nia", "Armenia")
tab$pais_origem <- str_replace(tab$pais_origem, "But�o", "Butao")
tab$pais_origem <- str_replace(tab$pais_origem, "B�lgica", "Belgica")
tab$pais_origem <- str_replace(tab$pais_origem, "Bulg�ria", "Bulgaria")
tab$pais_origem <- str_replace(tab$pais_origem, "Camar�es", "Camaroes")
tab$pais_origem <- str_replace(tab$pais_origem, "Col�mbia", "Colombia")
tab$pais_origem <- str_replace(tab$pais_origem, "Cor�ia do Sul", "Coreia do Sul")
tab$pais_origem <- str_replace(tab$pais_origem, "Cro�cia", "Croacia")
tab$pais_origem <- str_replace(tab$pais_origem, "Eslov�nia", "Eslovenia")
tab$pais_origem <- str_replace(tab$pais_origem, "Eti�pia", "Etiopia")
tab$pais_origem <- str_replace(tab$pais_origem, "Fran�a", "Franca")
tab$pais_origem <- str_replace(tab$pais_origem, "Ge�rgia", "Georgia")
tab$pais_origem <- str_replace(tab$pais_origem, "Gr�cia", "Grecia")
tab$pais_origem <- str_replace(tab$pais_origem, "Guin�", "Guine")
tab$pais_origem <- str_replace(tab$pais_origem, "Guin� Equatorial", "Guine Equatorial")
tab$pais_origem <- str_replace(tab$pais_origem, "Guin�-Bissau", "Guine-Bissau")
tab$pais_origem <- str_replace(tab$pais_origem, "G�mbia", "Gambia")
tab$pais_origem <- str_replace(tab$pais_origem, "Haiti ", "Haiti")
tab$pais_origem <- str_replace(tab$pais_origem, "Ir�", "Ira")
tab$pais_origem <- str_replace(tab$pais_origem, "t�lia", "talia")
tab$pais_origem <- str_replace(tab$pais_origem, "I�men", "Iemen")
tab$pais_origem <- str_replace(tab$pais_origem, "Jap�o", "Japao")
tab$pais_origem <- str_replace(tab$pais_origem, "Jord�nia", "Jordania")
tab$pais_origem <- str_replace(tab$pais_origem, "Let�nia", "Letonia")
tab$pais_origem <- str_replace(tab$pais_origem, "Lib�ria", "Liberia")
tab$pais_origem <- str_replace(tab$pais_origem, "Litu�nia", "Lituania")
tab$pais_origem <- str_replace(tab$pais_origem, "L�bano", "Libano")
tab$pais_origem <- str_replace(tab$pais_origem, "L�bia", "Libia")
tab$pais_origem <- str_replace(tab$pais_origem, "Maced�nia", "Macedonia")
tab$pais_origem <- str_replace(tab$pais_origem, "Mal�sia", "Malasia")
tab$pais_origem <- str_replace(tab$pais_origem, "Maurit�nia", "Mauritania")
tab$pais_origem <- str_replace(tab$pais_origem, "Mo�ambique", "Mocaambique")
tab$pais_origem <- str_replace(tab$pais_origem, "M�xico", "Mexico")
tab$pais_origem <- str_replace(tab$pais_origem, "Nam�bia", "Namibia")
tab$pais_origem <- str_replace(tab$pais_origem, "Nicar�gua", "Nicaragua")
tab$pais_origem <- str_replace(tab$pais_origem, "Nig�ria", "Nigeria")
tab$pais_origem <- str_replace(tab$pais_origem, "Nig�ria ", "Nigeria")
tab$pais_origem <- str_replace(tab$pais_origem, "N�ger", "Niger")
tab$pais_origem <- str_replace(tab$pais_origem, "N�o informado", "Nao informado")
tab$pais_origem <- str_replace(tab$pais_origem, "Om�", "Oma")
tab$pais_origem <- str_replace(tab$pais_origem, "Paquist�o", "Paquistao")
tab$pais_origem <- str_replace(tab$pais_origem, "Pol�nia", "Polonia")
tab$pais_origem <- str_replace(tab$pais_origem, "Qu�nia", "Quenia")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica Centro-Africana", "Republica Centro-Africana")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica da Guin�", "Republica da Guine")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica da Guine", "Republica da Guine")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica Democr�tica do Congo", "Republica Democratica do Congo")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica Dominicana", "Republica Dominicana")
tab$pais_origem <- str_replace(tab$pais_origem, "Rep�blica Tcheca", "Republica Tcheca")
tab$pais_origem <- str_replace(tab$pais_origem, "Rom�nia", "Romenia")
tab$pais_origem <- str_replace(tab$pais_origem, "R�ssia", "Russia")
tab$pais_origem <- str_replace(tab$pais_origem, "Som�lia", "Somalia")
tab$pais_origem <- str_replace(tab$pais_origem, "Sud�o", "Sudao")
tab$pais_origem <- str_replace(tab$pais_origem, "Sui�a", "Suica")
tab$pais_origem <- str_replace(tab$pais_origem, "Su��a", "Suica")
tab$pais_origem <- str_replace(tab$pais_origem, "S�o Tom� e Pr�ncipe", "Sao Tome e Principe")
tab$pais_origem <- str_replace(tab$pais_origem, "S�ria", "Siria")
tab$pais_origem <- str_replace(tab$pais_origem, "S�rvia", "Servia")
tab$pais_origem <- str_replace(tab$pais_origem, "Tail�ndia", "Tailandia")
tab$pais_origem <- str_replace(tab$pais_origem, "Tanz�nia", "Tanzania")
tab$pais_origem <- str_replace(tab$pais_origem, "Tun�sia", "Tunisia")
tab$pais_origem <- str_replace(tab$pais_origem, "Ucr�nia", "Ucrania")
tab$pais_origem <- str_replace(tab$pais_origem, "Usbequist�o", "Usbequistao")
tab$pais_origem <- str_replace(tab$pais_origem, "Venezuela ", "Venezuela")
tab$pais_origem <- str_replace(tab$pais_origem, "Vietn�", "Vietna")
tab$pais_origem <- str_replace(tab$pais_origem, "Zimb�bue", "Zimbabue")
tab$pais_origem <- str_replace(tab$pais_origem, "Z�mbia", "Zambia")
tab$pais_origem <- str_replace(tab$pais_origem, "�frica do Sul", "Africa do Sul")
tab$pais_origem <- str_replace(tab$pais_origem, "�frica do SuL", "Africa do Sul")
tab$pais_origem <- str_replace(tab$pais_origem, "�ndia", "India")
tab$pais_origem <- str_replace(tab$pais_origem, "�ustria", "Austria")
tab$pais_origem <- str_replace(tab$pais_origem, "Alb�nia", "Albania")
##Bezirke namen
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Bel\xe9m" , "Belem")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Brasil\xe2ndia" , "Brasilandia")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Br\xe1s" , "Bras")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Butant\xe3" , "Butanta")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Canga\xedba" , "Cangaiba")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Cap\xe3o Redondo" , "Capao Redondo")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Carr\xe3o" , "Carrao")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Cidade L\xedder" , "Cidade Lider")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Consola\xe7\xe3o" , "Consolacao")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Freguesia do \xd3" , "Freguesia do O")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Graja\xfa" , "Grajau")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jaguar\xe9" , "Jaguare")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jaragu\xe1" , "Jaragua")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jardim \xc2ngela" , "Jardim Angela")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jardim S\xe3o Lu\xeds" , "Jardim Sao Luis")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Ja\xe7an\xe3" , "Jacana")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jos\xe9 Bonif\xe1cio" , "Jose Bonifacio")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Lim\xe3o" , "Limao")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "N\xe3o informado" , "Nao informado")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Outro Munic\xedpio ou Rec\xe9m-chegado" , "Outro Municipio ou Recem-chegado")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Mo\xf3ca" , "Mooca")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Outro Munic\xedpio" , "Outro Municipio ou Recem-chegado")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Rep\xfablica" , "Republica")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Santa Cec\xedlia" , "Santa Cecilia")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Sacom\xe3" , "Sacoma")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "santana" , "Santana")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Sa\xfade" , "Saude")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe9" , "Se")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe3o Domingos" , "Sao Domingos")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe3o Lucas" , "Sao Lucas")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe3o Mateus" , "Sao Mateus")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe3o Miguel" , "Sao Miguel")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "S\xe3o Rafael" , "Sao Rafael")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Tatuap\xe9" , "Tatuape")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Trememb\xe9" , "Tremembe")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Vila Curu\xe7\xe1" , "Vila Curuca")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "xc1gua Rasa" , "Agua Rasa")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "�gua Rasa" , "Agua Rasa")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Vila Senia" , "Vila Sonia")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Seo" , "Sao")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Jardim" , "JD")
tab$distrito_moradia <- str_replace(tab$distrito_moradia, "Cidade" , "CID")
tab$distrito_moradia <- toupper(tab$distrito_moradia)
#tab$distrito_moradia <- str_replace(tab$distrito_moradia, "JARDIM" , "JD")
#tab$distrito_moradia <- str_replace(tab$distrito_moradia, "CIDADE" , "CID")
##Tage
tab$data_entrada_brasil <- str_replace(tab$data_entrada_brasil, "N�o informado", "")
tab$dif_dtcad_dtingr_meses <- str_replace(tab$dif_dtcad_dtingr_meses, "N�o informado", "")
tab$data_entrada_brasil <- dmy(tab$data_entrada_brasil)
tab$data_cadastro <- dmy(tab$data_cadastro)
tab$distrito_moradia <- as.factor(tab$distrito_moradia)
tab$sexo <- as.factor(tab$sexo)
tab$pais_origem <- as.factor(tab$pais_origem)
tab$fx_etaria <- as.factor(tab$fx_etaria)
tab$condicoes_moradia <- as.factor(tab$condicoes_moradia)
tab$cor_raca <- as.factor(tab$cor_raca)
tab$escolaridade <- as.factor(tab$escolaridade)
tab$situacao_migratoria <- as.factor(tab$situacao_migratoria)
tab$fonte_renda <- as.factor(tab$fonte_renda)
tab$cidade_ingresso <- as.factor(tab$cidade_ingresso)
bezirk<- read_sf("/Users/alexmarques/Downloads/Bairros_Distritos_CidadeSP/LAYER_DISTRITO/DEINFO_DISTRITO.shp")
bezirk$distrito_moradia <-  bezirk$NOME_DIST
kkk<- inner_join(tab, bezirk, by = "distrito_moradia")
kkk1<- right_join(tab, bezirk, by = "distrito_moradia")
kkk$index <- 1:nrow(kkk)
herkunft <-kkk %>%
group_by(pais_origem) %>%
summarise(count = n_distinct(index))
anderen <-kkk %>%
group_by( distrito_moradia) %>%
summarise(count = n_distinct(index))
landen<- inner_join(bezirk,anderen, by= "distrito_moradia")
###Diagramme
plot1<- tm_shape(landen) +
tm_polygons(col = "count", style= "quantile" ,n=10,
title="Imigrantes no Bairro",
id = "NOME_DIST"
)+
tm_text("SIGLA_DIST", size = .4)
tmap_mode("view")
plot1
wordcloud2(herkunft, size = 10)
knit_with_parameters("~/Programmieren/R/Imigranten/Imigrantes.Rmd")
install.packages("shinyjs")
install.packages("golem")
install.packages("golem")
install.packages("golem")
library(shiny); runApp('Programmieren/R/R Shiny Interactive/Advanced Shiny .R')
library(shiny)
library(ggplot2)
library(DT)
server <- function(input, output, session) {
output$tableDT <- DT::renderDataTable(diamonds[1:1000,],
options = list(paging=F),
rownames=F,
filter = "top")
}
ui <- fluidPage(
DT::dataTableOutput("tableDT")
)
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(DT)
server <- function(input, output, session) {
output$tableDT <- DT::renderDataTable(datatable(diamonds[1:1000,],
options = list(paging=F),
rownames=F,
filter = "top") %>%
formatCurrency("price", "$") %>%
formatStyle("price", color = "green") %>%
formatStyle("cut",
transform = "rotateX(20deg) rotateY(5deg) rotateZ(5deg)",
backgroundColor = styleEqual(
unique(diamonds$cut), c("salmon", "lightblue",
"grey", "lightgreen", "lightpink"))))
}
ui <- fluidPage(
DT::dataTableOutput("tableDT")
)
shinyApp(ui = ui, server = server)
server <- function(input,output, session) {
library(ggplot2) # for the diamonds dataset, and ggplot feature
library(DT) # for the dataTableOutput
library(shiny) # should always be activated
output$plot <- renderPlot({
ggplot(diamonds, aes(price, carat)) + geom_point()
})
diam <- reactive({
user_brush <- input$user_brush
sel <- brushedPoints(diamonds, user_brush)
return(sel)
})
output$table <- DT::renderDataTable(DT::datatable(diam()))
}
ui <-   fluidPage(
h1("Using the brush feature to select specific observations"),
plotOutput("plot", brush = "user_brush"),
dataTableOutput("table")
)
shinyApp(ui = ui, server = server)
server <- function(input,output, session) {
library(ggplot2) # for the diamonds dataset, and ggplot feature
library(DT) # for the dataTableOutput
output$plot <- renderPlot({
ggplot(diamonds, aes(price, carat)) + geom_point()
})
diam <- reactive({
user_click <- input$user_click
sel <- nearPoints(diamonds, user_click, threshold = 10, maxpoints = 5)
# maxpoints gives the maximum number of observations in the table
# threshold gives the maximum distance in the dataset
return(sel)
})
output$table <- DT::renderDataTable(DT::datatable(diam()))
}
ui <-   fluidPage(
h1("Using the click feature to select specific observations"),
plotOutput("plot", click = "user_click"),
dataTableOutput("table")
)
shinyApp(ui = ui, server = server)
server <- function(input,output, session) {
library(ggplot2) # for the diamonds dataset, and ggplot feature
library(DT) # for the dataTableOutput
output$plot <- renderPlot({
ggplot(diamonds, aes(price, carat)) + geom_point()
})
diam <- reactive({
user_brush <- input$user_brush
sel <- brushedPoints(diamonds, user_brush)
return(sel)
})
output$table <- DT::renderDataTable(DT::datatable(diam()))
output$mydownload <- downloadHandler(
filename = "plotextract.csv",
content = function(file) {
write.csv(diam(), file)})
}
ui <- fluidPage(
h3("Exporting Data as .csv"),
plotOutput("plot", brush = "user_brush"),
dataTableOutput("table"),
downloadButton(outputId = "mydownload", label = "Download Table")
)
shinyApp(ui = ui, server = server)
emsemble_dapprentissage <- read.csv("../input/train.csv")
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/R")
cemsemble_dapprentissage <- read.csv("/input/train.csv")
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/")
cemsemble_dapprentissage <- read.csv("/input/train.csv")
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/input//")
cemsemble_dapprentissage <- read.csv("/input/train.csv")
setwd("\Users\alexmarques\Programmieren\Portfólio\Kaggle\TitanicMLProject")
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject")
cemsemble_dapprentissage <- read.csv("../input/train.csv")
cemsemble_dapprentissage <- read.csv("../input/train.csv", header = TRUE, row.names = 'PassengerId')
wd
emsemble_test  <- read.csv("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/input/test.csv")
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/")
cemsemble_dapprentissage <- read.csv("/input/train.csv", header = TRUE, row.names = 'PassengerId')
cemsemble_dapprentissage <- read.csv("input/train.csv", header = TRUE, row.names = 'PassengerId')
View(cemsemble_dapprentissage)
View(emsemble_test)
# Téléchargez les ensembles de données
cemsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_test  <- read.csv("input/test.csv", header = TRUE,stringsAsFactors = FALSE)
# Téléchargez les ensembles de données
cemsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_test  <- read.csv("input/test.csv", header = TRUE,stringsAsFactors = FALSE)
# Téléchargez les ensembles de données
emsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_dapprentissage$IsTrain <- TRUE
View(emsemble_dapprentissage)
View(cemsemble_dapprentissage)
View(cemsemble_dapprentissage)
rm(cemsemble_dapprentissage)
emsemble_test$IsTrain <- FALSE
View(emsemble_test)
emsemble_dapprentissage$Tester <- FALSE
emsemble_test$Tester <- TRUE
emsemble_test$Survived
View(emsemble_test)
emsemble_test$Survived <- NA
tout<- rbind(emsemble_dapprentissage,emsemble_test)
# Téléchargez les ensembles de données
emsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_test  <- read.csv("input/test.csv", header = TRUE,stringsAsFactors = FALSE)
emsemble_dapprentissage$Tester <- FALSE
emsemble_test$Tester <- TRUE
emsemble_test$S <- TRUE
emsemble_test$Survived <- NA
tout<- rbind(emsemble_dapprentissage,emsemble_test)
# Définir le nouveau répertoire de travail
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/")
# Téléchargez les ensembles de données
emsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_test  <- read.csv("input/test.csv", header = TRUE,stringsAsFactors = FALSE)
emsemble_dapprentissage$Tester <- FALSE
emsemble_test$Tester <- TRUE
emsemble_test$S <- TRUE
emsemble_test$Survived <- NA
tout<- rbind(emsemble_dapprentissage,emsemble_test)
# Définir le nouveau répertoire de travail
setwd("/Users/alexmarques/Programmieren/Portfólio/Kaggle/TitanicMLProject/")
# Téléchargez les ensembles de données
emsemble_dapprentissage <- read.csv("input/train.csv",stringsAsFactors = FALSE, header = TRUE)
emsemble_test  <- read.csv("input/test.csv", header = TRUE,stringsAsFactors = FALSE)
emsemble_dapprentissage$Tester <- FALSE
emsemble_test$Tester <- TRUE
emsemble_test$Survived <- NA
tout<- rbind(emsemble_dapprentissage,emsemble_test)
tout[tout$Embarked=='',"Embarked"]
tout$Embarked
table(tout$Embarked)
tout[tout$Embarked=='',"Embarked"]<-"S"
tout[tout$Embarked=='',"Embarked"]<-"S"
table(tout$Embarked)
table(is.na(tout$Age))
table(is.na(tout$Fare))
boxplot(tout$Age)
boxplot.stats(tout$Age)
boxplot.stats(tout$Age)$stats
boxplot.stats(tout$Age)$stats[5]
limite_dage<-boxplot.stats(tout$Age)$stats[5]
filtre_outlier<-tout$Fare<= limite_dage
tout[filtre_outlier]
tout[filtre_outlier,]
filtre_outlier<-tout$Age<= limite_dage
tout[filtre_outlier,]
colnames(tout)
equation_dage="Age ~ Pclass + Sex + Fare + SibSp + Parch + Ticket + Cabin + Embarked"
modele_age<- lm(
formula = equation_dage,
data = tout[filtre_outlier,]
)
predict(modele_age,
newdata = tout[is.na(tout$Age),c(Pclass , "Sex", "Fare", "SibSp" , "Parch", "Ticket" , "Cabin" , "Embarked")] )
predict(modele_age,
newdata = tout[is.na(tout$Age),c("Pclass", "Sex", "Fare", "SibSp" , "Parch", "Ticket" , "Cabin" , "Embarked")] )
equation_dage="Age ~ Pclass + Sex + Fare + SibSp + Parch + Cabin + Embarked"
modele_age<- lm(
formula = equation_dage,
data = tout[filtre_outlier,]
)
predict(modele_age,
newdata = tout[is.na(tout$Age),c("Pclass", "Sex", "Fare", "SibSp" , "Parch" , "Cabin" , "Embarked")] )
equation_dage="Age ~ Pclass + Sex + Fare + SibSp + Parch + Embarked"
modele_age<- lm(
formula = equation_dage,
data = tout[filtre_outlier,]
)
predict(modele_age,
newdata = tout[is.na(tout$Age),c("Pclass", "Sex", "Fare", "SibSp" , "Parch"  , "Embarked")] )
predictions_dage<- predict(modele_age,
newdata = tout[is.na(tout$Age),c("Pclass", "Sex", "Fare", "SibSp" , "Parch"  , "Embarked")] )
tout[is.na(tout$Age),"Age"]
tout[is.na(tout$Age),"Age"]<-predictions_dage
View(tout)
tout<- rbind(emsemble_dapprentissage,emsemble_test)
predictions_dage<- round(predict(modele_age,
newdata = tout[is.na(tout$Age),c("Pclass", "Sex", "Fare", "SibSp" , "Parch"  , "Embarked")]),
2
)
tout[is.na(tout$Age),"Age"]<-predictions_dage
rm(modele_age,equation_dage,filtre_outlier,limite_dage,predictions_dage)
ensemble_dapprentissage<- tout[tout$Tester==FALSE]
ensemble_test<- tout[tout$Tester==TRUE]
ensemble_dapprentissage<- tout[tout$Tester==FALSE,]
ensemble_test<- tout[tout$Tester==TRUE,]
rm(emsemble_dapprentissage,emsemble_test)
ensemble_dapprentissage$Survived<- as.factor(ensemble_dapprentissage$Survived)
View(ensemble_dapprentissage)
str(ensemble_dapprentissage)
rm(modele_age,equation_dage,filtre_outlier,limite_dage,predictions_dage,equation_dage)
equation_survecu<- "Survived ~ Pclass + Sex + Age + Fare + SibSp + Parch + Embarked"
survecu<- as.formula(equation_survecu)
install.packages("randomForest")
install.packages("randomForest")
install.packages("randomForest")
install.packages("randomForest")
install.packages("randomForest")
